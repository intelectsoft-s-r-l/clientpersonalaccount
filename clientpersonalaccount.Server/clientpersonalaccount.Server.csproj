<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>b9638c7c-35c1-414a-9e2a-8266947013b9</UserSecretsId>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<DockerfileContext>..</DockerfileContext>
		<SpaRoot>..\clientpersonalaccount.client</SpaRoot>
		<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
		<SpaProxyServerUrl>https://localhost:3000</SpaProxyServerUrl>
		<DockerImageName>businessaccount</DockerImageName>
		<DockerImageTag>latest</DockerImageTag>
		<ContainerImageName>docker.edi.md/businessaccount</ContainerImageName>
		<ContainerRegistry>docker.edi.md</ContainerRegistry>
		<ContainerRepository>businessaccount</ContainerRepository>
	</PropertyGroup>

	<ItemGroup>
		<!-- Удаляем статические файлы React при очистке -->
		<Compile Remove="wwwroot\NewFolder\**" />
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="wwwroot\NewFolder\**" />
		<EmbeddedResource Remove="wwwroot\NewFolder\**" />
		<None Remove="$(SpaRoot)**" />
		<None Remove="wwwroot\NewFolder\**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Убеждаемся, что Node.js установлен -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>
	
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">

		<!-- Включаем собранные файлы в публикацию -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(Filename)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<ItemGroup>
		<PackageReference Include="EPPlus" Version="8.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.18" />
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy">
			<Version>8.0.18</Version>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.22.1" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="app\publish\" />
	</ItemGroup>

</Project>
